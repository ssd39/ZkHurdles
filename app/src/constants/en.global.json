{
  "footer": {
    "title": "Calimero Network"
  },
  "addRootKeyPage": {
    "starknetRootKey": {
      "title": "Add Starknet root key",
      "subtitle": "Choose which account from your wallet you want to add a node root key for. Each key, and therefore each account, can only be added once",
      "accountIdText": "Account Id",
      "logoutButtonText": "Logout",
      "argentXButton": "Add root key with ArgentX",
      "metamaskButton": "Add root key with MetaMask",
      "currentNetwork": "Current network",
      "signMessage": "Sign authentication message",
      "backToWalletSelector": "Back to wallet selector",
      "backToLoginPage": "Back to login selector"
    }
  },
  "useStarknet": {
    "requestNodeDataError": "Error while requesting node data",
    "noSignatureError": "Signature is empty",
    "noAddressError": "Address is empty",
    "loginError": "Error while login",
    "rootkeyError": "Error while adding root key",
    "applicationNameText": "admin-dashboard",
    "signMessageError": "Error while signing message",
    "signOutError": "Failed to signing out",
    "errorChangingNetwork": "Error changing network",
    "walletNotFound": "Wallet not found",
    "errorLogin": "Error while login"
  },
  "serverDown": {
    "useHookComponentErrorText": "useServerDown must be used within a ServerDownProvider",
    "popupTitle": "503 - Service Unavailable",
    "popupMessage": "The Node Server at {{nodeApiEndpoint}} is unreachable. Please try again later."
  },
  "loginPage": {
    "logoDashboardText": "Admin Dashboard",
    "title": "Calimero Node Admin Dashboard",
    "subtitle": "Start using Calimero by selecting your wallet.",
    "buttonConnectText": "Connect Wallet",
    "loginSelector": {
      "title": "Continue with wallet",
      "starknetButtonText": "Starknet wallet"
    },
    "starknetLogin": {
      "title": "Login with Starknet",
      "subtitle": "Choose which account from your wallet you want to log in with",
      "accountIdText": "Account Id",
      "logoutButtonText": "Logout",
      "switchWalletButtonText": "Switch Wallet",
      "authButtonText": "Authenticate",
      "switchAccountButtonText": "Switch Account",
      "backButtonText": "Back to wallet selector",
      "argentXButton": "Login with ArgentX",
      "metamaskButton": "Login with MetaMask",
      "titleRootKey": "Add Starknet root key",
      "currentNetwork": "Current network",
      "signMessage": "Sign authentication message",
      "backToWalletSelector": "Back to wallet selector",
      "backToLoginPage": "Back to login selector"
    }
  },
  "appLoginPopup": {
    "createTokenError": "Error creating token, please try again",
    "selectContext": {
      "title": "Application Sign-in Request",
      "detailsText": "Details",
      "websiteText": "From site: ",
      "appIdText": "Application Id: ",
      "contextsTitle": "Select Context",
      "contextsSubtitle": "To continue select available or start a new context for the application",
      "noContextsText": "No contexts found",
      "selectedContextText": "Selected context Id:",
      "buttonNextText": "Confirm context Id",
      "buttonBackText": "Return to application",
      "buttonCreateText": "Start new"
    },
    "selectIdentity": {
      "title": "Application Sign-in Request",
      "detailsText": "Details",
      "websiteText": "From site: ",
      "appIdText": "Application Id: ",
      "contextIdText": "Context Id: ",
      "contextsTitle": "Select context identity",
      "contextsSubtitle": "To continue select available context identity for the application",
      "noContextsText": "No contexts identities found",
      "selectedContextText": "Selected context identity:",
      "backButtonText": "back to context select",
      "buttonNextText": "Confirm context identity",
      "buttonBackText": "Return to application"
    },
    "createToken": {
      "title": "Application Sign-in Request",
      "websiteText": "From site: ",
      "appIdText": "Application Id: ",
      "contextIdText": "Context Id: ",
      "backButtonText": "back to select context identity",
      "contextIdentityText": "Context Identity: ",
      "detailsText": "Details",
      "buttonNextText": "Create token"
    }
  },
  "nodeDataSource": {
    "joinContextErrorTitle": "Error joining context",
    "joinContextErrorMessage": "Failed to join context",
    "unauthorizedErrorMessage": "Unauthorized"
  },
  "statusModal": {
    "buttonContinueText": "Continue",
    "buttonDeleteText": "Delete",
    "buttonCopyText": "Copy",
    "buttonCloseText": "Close",
    "buttonCancelText": "Cancel"
  }
}
